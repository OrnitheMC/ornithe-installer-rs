name: Automated Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        build: [linux, windows, mac]
        include:
          - build: linux
            os: ubuntu-latest
            rust: "stable"
          - build: windows
            os: windows-latest
            rust: "stable"
          - build: mac
            os: macos-latest
            rust: "stable"
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - name: Install packages (Linux)
        if: runner.os == 'Linux'
        uses: awalsh128/cache-apt-pkgs-action@v1.4.3
        with:
          packages: libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev libgtk-3-dev # libgtk-3-dev is used by rfd
          version: 1.0
          execute_install_scripts: true
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --verbose
      - name: Build release binary
        run: cargo build --release
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: CI builds (${{ matrix.build }})
          path: |
            target/**/ornithe-installer-rs*
